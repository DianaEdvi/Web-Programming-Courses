Section 9_Flexbox 

display: flex is different from all the other display properties. Think of it as a separate entity. 

Flexbox nullifies all the previous display properties and puts all content on one line. 
display: flex properties
gap

display inline-flex: The flexbox itself is inline. The content will match the width of text. 

the default flex-direction is flex-direction: row. Sets the main axis to horizontal, left to right. The cross axis goes from top to bottom. 
flex-direction: column. The main axis is not top to bottom and the cross axis is left to right. 
flex-basis: sets the height OR width of each item (expands the main axis, depending) 

Flex-basis needs to go on the child element, not the parent, like flex or gap 

Flexible layout 
Will the property go on the child or the parent? 
order: 0 (child) By default everything has the order of 0 and the order is from the html. 

flex-wrap (parent) deals with the overflow of content 
flex-wrap: nowrap; by default if its too long it will get pushed off the page
flex-wrap: wrap; all the lements that dont fit on the page will then wrap around
flex-wrap: wrap-reverse; same as regular wrap, but from the bottom right

justify-content (parent) sets the distribution along the main axis
justify-content: flex-start; everything justifies to the left
justify-content: flex-end; everything justifies to the right
justify-content: center; everything centers
justify-content: space-between; uses up all the space allocated (first and last stuck to the edges of container)
justify-content: space-around; uses up all the space allocated (the space between the edge items adds up to a normal gap)
justify-content: space-evenly; uses up all the space allocated (all items evenly gapped)

align-items (parent): sets the distribution along the cross axis
Need to set the height of the container, or it will be the height of the items
height: 70vh; viewport height (70%)
align-items: flex-start; aligns items to the top
align-items: flex-end; aligns items to the bottom
align-items: center; centers items
align-items: baseline; makes height the height of the items
align-items: stretch; sets vh to 100

align-self (child): the same as align-items but for individual items (good for unique positions of an item)

align-content (parent): similar to align-items, but only works when flex-wrap is set to wrap

there are other properties, check the CSS cheat sheet (the online one)


Flex sizing 
Flexbox default usually shrinks along with the window, but there are some customizations we can do. 
Priority list:

Content width (words)< width (px's)< flex-basis (width main axis)< min-width (aka longest word)/max-width (longest line of text) (max first)

Four ways of sizing: 
1. Flex container, shrinks the box to the length of the longest word, which will become the minimum width. Then it gets pushed off if shrunk more. 
Flex items: you set the width of the box manually, then the flexbox will try and respect the width input. It becomes the minimum width instead if its pushed too far. 

Max width, min width can be manually set. Flexbox prioritizes the min-max width over flex-basis

Flex grow and shrink 
0 means off
1 is on
Very logical tbh, it can only grow or shrink if its on. Otherwise it will stay its default value 
Auto gives more width to boxes with more content, less for less 
Shorthand: 
flex: 1 1 0 (grow shrink grow)
Shorthand 2: 
flex: 1 (aka grow 1 shrink 1 auto 0)

flex 1/2/3 are all abt the ratios compared to one another

